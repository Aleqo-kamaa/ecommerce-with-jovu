datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String?
  products  Product[]
}

model Product {
  id          String      @id @default(cuid())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  price       Float?
  description String?
  stock       Int?
  name        String?
  category    Category?   @relation(fields: [categoryId], references: [id])
  categoryId  String?
  reviews     Review[]
  inventories Inventory[]
}

model AdminDashboard {
  id               String   @id @default(cuid())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  activity         String?
  adminName        String?
  email            String?
  salesReports     String?
  productAnalytics String?
}

model Order {
  id              String    @id @default(cuid())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  user            User?     @relation(fields: [userId], references: [id])
  userId          String?
  totalAmount     Float?
  status          String?
  payments        Payment[]
  trackingNumber  String?
  shippingAddress String?
}

model User {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  firstName   String?
  lastName    String?
  username    String   @unique
  email       String?  @unique
  password    String
  roles       Json
  orders      Order[]
  reviews     Review[]
  phoneNumber String?
  address     String?
}

model Review {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rating    Int?
  comment   String?
  product   Product? @relation(fields: [productId], references: [id])
  productId String?
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Payment {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  status        String?
  amount        Float?
  paymentMethod String?
  order         Order?   @relation(fields: [orderId], references: [id])
  orderId       String?
}

model Inventory {
  id                String   @id @default(cuid())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  quantity          Int?
  warehouseLocation String?
  product           Product? @relation(fields: [productId], references: [id])
  productId         String?
}
